{"name":"Angular-growl-notifications","tagline":"Growl notifications for AngularJS","body":"# Growl notifications for AngularJS\r\n\r\nDeclaratively create notifications that automatically disappear after a specified timeout.\r\n\r\nThink Growl, but in AngularJS. Oh, and Bootstrap compatible too.\r\n\r\nGrowl notifications for AngularJS allows you to:\r\n\r\n- create notifications without programming\r\n- specify a custom timeout for each notification\r\n- use directives anywhere in your markup to create notifications\r\n- use directives anywhere in your markup to show notifications with Bootstrap compatible markup\r\n- use AngularJS expressions inside notifications\r\n- display sanitized HTML inside notifications (requires ngSanitize module)\r\n- completely customize the markup that is used to render the notifications\r\n- customize the CSS styles used to display the notifications\r\n- use the API to control everything programmatically if you want to\r\n\r\nLet's look at a quick example!\r\n\r\n## Quick start\r\n\r\nLoad the required script libraries:\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"angular.js\"></script>\r\n<script type=\"text/javascript\" src=\"angular-sanitize.js\"></script>\r\n<script type=\"text/javascript\" src=\"growl-notifications.js\"></script>\r\n```\r\n\r\nSpecify the `growlNotifications` and `ngSanitize` modules as dependencies in your Angular app:\r\n\r\n```javascript\r\nangular.module('yourApp', ['growlNotifications', 'ngSanitize']);\r\n```\r\n\r\nPut this line anywhere in your HTML markup to specify where you want to display the notifications:\r\n\r\n```html\r\n<div growl-notifications></div>\r\n```\r\n\r\nThe `growl-notifications` directive will automatically render Bootstrap compatible markup to\r\ndisplay notifications using Bootstrap alert boxes.\r\n\r\nYou can also create your own custom markup to display notifications any way you like.\r\nWe will get to that later.\r\n\r\nUse the `growl-notification` directive to create a notification that will automatically disappear after 5 seconds:\r\n\r\n```html\r\n<div growl-notification>\r\n    Awesome, I will automatically disappear after 5 seconds.\r\n</div>\r\n```\r\n\r\nThis will cause a notification to be displayed inside the `<div growl-notifications></div>` that is automatically removed after 5 seconds.\r\n\r\nThat's it! You've got a fully working growl notification system in just 3 lines of code!\r\n\r\nAnd if you are using Bootstrap, it will already look great too.\r\n\r\nBut there is more... much more... so read on...\r\n\r\n## Creating notifications\r\n\r\nThere are 2 ways to create notifications:\r\n\r\n- using the `growl-notification` directive in your HTML\r\n- using the `add()` method of the `growlNotifications` service in your JavaScript code\r\n\r\n### Using the growl-notification directive\r\n\r\nThe `growl-notification` directive allows you to conveniently create notifications\r\nfrom within your HTML markup:\r\n\r\n```html\r\n<div growl-notification>\r\n    Awesome, I will automatically disappear after 5 seconds.\r\n</div>\r\n```\r\n\r\nYou can add conditional notifications, which are great when working with forms:\r\n\r\n```html\r\n<div growl-notification ng-if=\"formSubmitted\">\r\n    Congratulations, the form was submitted successfully!\r\n\r\n    This notification will be shown when $scope.formSubmitted evaluates\r\n    as truthy and will disappear automatically after 5 seconds.\r\n</div>\r\n```\r\n\r\nYou can use expressions to create personalized notifications:\r\n\r\n```html\r\n<div growl-notification>\r\n    Hello {{name}}\r\n\r\n    This will display \"Hello world\" if $scope.name = \"world\"\r\n</div>\r\n```\r\n\r\nExpressions are evaluated against the scope where the `growl-notification` directive is used, not where\r\nthe `growl-notifications` is placed.\r\n\r\nThis is more intu√Øtive as it refers to the scope where you are using the directive.\r\n\r\nFinally you can also use HTML markup to make your notifications look great:\r\n\r\n```html\r\n<div growl-notification>\r\n    <b>Hello bold {{name}}</b>\r\n</div>\r\n```\r\n\r\nTo allow HTML to be used inside the directive, the `ngSanitize` module is required, hence the need\r\nto specify it as a dependent module in your AngularJS app.\r\n\r\n### Using the growlNotifications service\r\n\r\nThe growlNotifications service centrally manages the notifications and can be injected anywhere in your AngularJS app.\r\n\r\nTo create a notification from within a controller:\r\n\r\n```javascript\r\nangular.controller('someCtrl', ['growlNotifications', function(growlNotifications){\r\n\r\n    // Add a notification\r\n    growlNotifications.add('Hello world');\r\n\r\n}]);\r\n```\r\n\r\nEach notification has three properties:\r\n\r\n- `message`: the message to display inside the HTML, can contain expressions and HTML\r\n- `type`: the notification type, can be any string and can be used to filter notifications or style them by type, defaults to 'info'\r\n- `ttl`: the number of milliseconds to wait before the notification is removed, defaults to 5000 (5 seconds)\r\n\r\nThe `add(message, type, ttl)` method allows you to specify each property like this:\r\n\r\n```javascript\r\n// Add a notification with type 'info' that is removed after 5 seconds\r\ngrowlNotifications.add('Hello world');\r\n\r\n// Add a notification with type 'warning' that is removed after 5 seconds\r\ngrowlNotifications.add('Hello world', 'warning');\r\n\r\n// Add a notification with type 'warning' that is removed after 2 seconds\r\ngrowlNotifications.add('Hello world', 'warning', 2000);\r\n```\r\n\r\n## Displaying the notifications\r\n\r\nThere are 2 ways to display notifications:\r\n\r\n- using the `growl-notifications` directive in your HTML to create boilerplate Bootstrap compatible markup\r\n- using the `notifications` property of the `growlNotifications` service to create your custom markup\r\n\r\n### Using the growl-notifications directive\r\n\r\nThe `growl-notifications` directive allows you to display the notifications anywhere in your HTML:\r\n\r\n```html\r\n<div growl-notifications></div>\r\n```\r\n\r\nUnder the hood, the element is transformed to:\r\n\r\n```html\r\n<ul class=\"list-unstyled\" growl-notifications></ul>\r\n```\r\n\r\nWhenever you create a notification, a `li` item with Bootstrap compatible alert markup is created and removed when\r\nthe TTL has expired:\r\n\r\n```html\r\n<ul class=\"list-unstyled\" growl-notifications>\r\n    <li class=\"alert alert-{{type}}\">\r\n        Notification message\r\n    </li>\r\n</ul>\r\n```\r\n\r\nThe `li` item is assigned a CSS class `alert-{{type}}` where type is the type you specified for the notification.\r\n\r\nThis allows you to easily use Bootstrap compatible alert styles:\r\n\r\n```javascript\r\n// alert-info\r\ngrowlNotifications.add('Hello world', 'info');\r\n\r\n// alert-warning\r\ngrowlNotifications.add('Hello world', 'warning');\r\n\r\n// alert-danger\r\ngrowlNotifications.add('Hello world', 'danger');\r\n\r\n// alert-success\r\ngrowlNotifications.add('Hello world', 'success');\r\n```\r\n\r\n### Using the notifications property of the growlNotifications service\r\n\r\nFirst assign the `growlNotifications` service to your `$scope`:\r\n\r\n```javascript\r\nangular.controller('someCtrl', ['growlNotifications', '$scope', function(growlNotifications, $scope){\r\n\r\n    // Make sure the service can be accessed from within the view\r\n    $scope.growlNotifications = growlNotifications;\r\n\r\n}]);\r\n```\r\n\r\nThen loop over the `notifications` property in your view template:\r\n\r\n```html\r\n<ul class=\"list-unstyled\">\r\n    <li ng-repeat=\"(id, notification) in growlNotifications.notifications\">\r\n        <div class=\"alert alert-{{notification.type}}\">\r\n            {{notification.message}}\r\n        </div>\r\n    </li>\r\n</ul>\r\n```\r\n\r\nThis allows you to create virtually any markup you could possible think of.\r\n\r\n## Change log\r\n\r\n### v0.2.0\r\n\r\n- Add `growl-notification` directive to conveniently add notifications from within HTML markup\r\n- Add `growl-notifications` directive to conveniently display notifications from within HTML markup\r\n- Add documentation\r\n\r\n### v0.1.0\r\n\r\n- Initial version\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}